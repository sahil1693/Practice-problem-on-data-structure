//Interviewbit.com length of longest subset

/*
Given an array of integers, A of length N, find the length of longest subsequence which is first increasing then decreasing.

Input Format:

The first and the only argument contains an integer array, A.
Output Format:

Return an integer representing the answer as described in the problem statement.
Constraints:

1 <= N <= 3000
1 <= A[i] <= 1e7
Example:

Input 1:
    [1, 11, 2, 10, 4, 5, 2, 1]

Output 1:
    6
    
Explanation 2:
    [1 2 10 4 2 1] is the longest subsequence.

*/


int longestSubsequenceLength(const int* A, int n1) {
    int a[1000006];
    int b[1000006];
    a[0]=1;
    int i,j;
    for(i=1;i<n1;i++)
    {
        a[i]=1;
        for(j=0;j<i;j++)
        {
           if(A[i]>A[j]&&a[i]<a[j]+1)
                a[i]=a[j]+1;
        }
    }
    b[n1-1]=1;
    for(i=n1-2;i>=0;i--)
    {
        b[i]=1;
        for(j=n1-1;j>i;j--)
        {
            if(A[i]>A[j]&&b[i]<b[j]+1)
                b[i]=b[j]+1;
        }
    }
    int max=0;
    for(i=0;i<n1;i++){
       // printf("%d %d\n",a[i],b[i]);
        if(a[i]+b[i]-1>max)
            max=a[i]+b[i]-1;
        }
    return max;
}
